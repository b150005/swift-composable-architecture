{"abstract":[{"type":"text","text":"Adds a reducer to run when this reducer changes the given value in state."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"toValue"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":") -> ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"removeDuplicates","kind":"externalParam"},{"kind":"text","text":" "},{"text":"isDuplicate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"kind":"attribute","text":"ReducerBuilder","preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Action","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">","kind":"text"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"reducer"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"V"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_OnChangeReducer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"text":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Action","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"State","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":" == ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that returns a value from the given state."}]}],"name":"toValue"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure to evaluate whether two elements are equivalent, for purposes of"},{"type":"text","text":" "},{"type":"text","text":"filtering. Return "},{"code":"true","type":"codeVoice"},{"text":" from this closure to indicate that the second element is a","type":"text"},{"type":"text","text":" "},{"text":"duplicate of the first.","type":"text"}]}],"name":"isDuplicate"},{"content":[{"inlineContent":[{"type":"text","text":"A reducer builder closure to run when the value changes."}],"type":"paragraph"}],"name":"reducer"}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A reducer that performs the logic when the state changes.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this operator to trigger additional logic when a value changes, like when a","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"},{"text":" makes a deeper change to a struct held in ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"code":["@Reducer","struct Settings {","  struct State {","    @BindingState var userSettings: UserSettings","    \/\/ ...","  }","","  enum Action: BindableAction {","    case binding(BindingAction<State>)","    \/\/ ...","  }","","  var body: some Reducer<State, Action> {","    BindingReducer()","      .onChange(","        of: { ($0.userSettings.isHapticFeedbackEnabled, $0.userSettings.isPushEnabled) },","        removeDuplicates: ==","      ) { oldValue, newValue in","        Reduce { state, action in","          .run { send in","            \/\/ Persist new value...","          }","        }","      }","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the value changes, the new version of the closure will be called, so any captured values"},{"text":" ","type":"text"},{"type":"text","text":"will have their values from the time that the observed value has its new value. The system"},{"type":"text","text":" "},{"text":"passes the old and new observed values into the closure.","type":"text"}]},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Take care when applying "},{"code":"onChange(of:)","type":"codeVoice"},{"type":"text","text":" to a reducer, as it adds an equatable check"},{"type":"text","text":" "},{"text":"for every action fed into it. Prefer applying it to leaf nodes, like ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","isActive":true},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"against values that are quick to equate."}]}]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/onChange(of:removeDuplicates:_:)"},"deprecationSummary":[{"inlineContent":[{"text":"Use 'onChange(of:)' with and equatable value, instead.","type":"text"}],"type":"paragraph"}],"metadata":{"title":"onChange(of:removeDuplicates:_:)","role":"symbol","externalID":"s:22ComposableArchitecture7ReducerPAAE8onChange2of16removeDuplicates_AA03_OneC0Vyxqd__qd_0_Gqd__5StateQzc_Sbqd___qd__tcqd_0_qd___qd__tctAaBRd_0_6ActionQyd_0_ALRtzAJQyd_0_AKRSr0_lF::SYNTHESIZED::s:22ComposableArchitecture5ScopeV","symbolKind":"method","extendedModule":"ComposableArchitecture","roleHeading":"Instance Method","platforms":[],"modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"removeDuplicates","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"_OnChangeReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R"},{"text":">","kind":"text"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/scope\/onchange(of:removeduplicates:_:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of app state that can be directly bindable"},{"text":" ","type":"text"},{"text":"in SwiftUI views.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingState"}],"deprecated":true,"kind":"symbol","title":"BindingState","navigatorTitle":[{"text":"BindingState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"url":"\/documentation\/composablearchitecture\/bindingreducer","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","type":"topic","abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingReducer","kind":"identifier"}],"title":"BindingReducer","kind":"symbol","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"title":"Scope","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/composablearchitecture\/scope"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"title":"Effect","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/onChange(of:removeDuplicates:_:)":{"deprecated":true,"abstract":[{"type":"text","text":"Adds a reducer to run when this reducer changes the given value in state."}],"title":"onChange(of:removeDuplicates:_:)","url":"\/documentation\/composablearchitecture\/scope\/onchange(of:removeduplicates:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"removeDuplicates","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"V"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", ("},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"_OnChangeReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/onChange(of:removeDuplicates:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"title":"State","abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","required":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerBuilder"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","url":"\/documentation\/composablearchitecture\/reducerbuilder","abstract":[{"text":"A result builder for combining reducers into a single reducer by running each, one after the","type":"text"},{"type":"text","text":" "},{"text":"other, and merging their effects.","type":"text"}],"role":"symbol","title":"ReducerBuilder"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Action"}],"title":"Action","abstract":[{"text":"A type that holds all possible actions that cause the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true,"type":"reference"},{"type":"text","text":" of the reducer to change"},{"type":"text","text":" "},{"text":"and\/or kick off a side ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"type":"text","text":" that can communicate with the outside world."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/action","required":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/Reducer-Implementations":{"title":"Reducer Implementations","url":"\/documentation\/composablearchitecture\/scope\/reducer-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/Reducer-Implementations","abstract":[],"kind":"article"}}}