{"abstract":[{"type":"text","text":"Suspends the current task while a predicate on state is "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"metadata":{"platforms":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"yield"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"symbolKind":"method","roleHeading":"Instance Method","title":"yield(while:)","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture9ViewStoreC5yield5whileySbxc_tYaF","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","deprecationSummary":[{"inlineContent":[{"text":"Use '@ObservableState', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Using-ObservableState","type":"text"}],"type":"paragraph"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"yield","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":" "},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"text":"A predicate on ","type":"text"},{"code":"ViewState","type":"codeVoice"},{"type":"text","text":" that determines for how long this method"},{"type":"text","text":" "},{"type":"text","text":"should suspend."}]}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to suspend at the same time you send an action to the view store, use"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/viewstore\/yield(while:)"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)"],"title":"Sending actions","generated":true,"anchor":"Sending-actions"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/yield(while:)":{"deprecated":true,"title":"yield(while:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/yield(while:)","abstract":[{"text":"Suspends the current task while a predicate on state is ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"yield","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","role":"symbol","kind":"symbol","deprecated":true,"title":"send(_:)","type":"topic","abstract":[{"type":"text","text":"Sends an action to the store."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/viewstore\/send(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:while:)":{"deprecated":true,"title":"send(_:while:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:while:)","abstract":[{"text":"Sends an action into the store and then suspends while a piece of state is ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"text":"ViewAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"type":"topic","title":"ViewStore","deprecated":true,"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"}}}