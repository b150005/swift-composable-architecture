{"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"persistenceKey","kind":"internalParam"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","text":"PersistenceReaderKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A default value that is used when no value can be returned from the persistence"},{"text":" ","type":"text"},{"type":"text","text":"key."}],"type":"paragraph"}],"name":"value"},{"content":[{"inlineContent":[{"type":"text","text":"A persistence key associated with the shared reference. It is responsible"},{"text":" ","type":"text"},{"type":"text","text":"for loading the shared referenceâ€™s value from some external source."}],"type":"paragraph"}],"name":"persistenceKey"}]}],"abstract":[{"text":"Creates a shared reference to a read-only value using a persistence key.","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/sharedreader\/init(wrappedvalue:_:fileid:line:)-7f68o"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", some ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP","text":"PersistenceReaderKey","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:22ComposableArchitecture12SharedReaderV12wrappedValue_6fileID4lineACyxGxyYbXK_qd__s12StaticStringVSutc0F0Qyd__RszAA011PersistenceD3KeyRd__lufc","extendedModule":"ComposableArchitecture","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"title":"init(wrappedValue:_:fileID:line:)","symbolKind":"init","roleHeading":"Initializer"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader\/init(wrappedValue:_:fileID:line:)-7f68o"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharedReader":{"abstract":[{"text":"A property wrapper type that shares a value with multiple parts of an application.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SharedReader"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SharedReader"}],"url":"\/documentation\/composablearchitecture\/sharedreader","title":"SharedReader","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"title":"Effect","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PersistenceReaderKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that can load and subscribe to state in an external system."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","title":"PersistenceReaderKey","role":"symbol","type":"topic","navigatorTitle":[{"text":"PersistenceReaderKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"kind":"article","url":"\/documentation\/composablearchitecture\/sharingstate","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","title":"Sharing state","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharedReader/init(wrappedValue:_:fileID:line:)-7f68o":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharedReader\/init(wrappedValue:_:fileID:line:)-7f68o","type":"topic","url":"\/documentation\/composablearchitecture\/sharedreader\/init(wrappedvalue:_:fileid:line:)-7f68o","abstract":[{"text":"Creates a shared reference to a read-only value using a persistence key.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"kind":"text","text":"() -> "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", some "},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP","text":"PersistenceReaderKey","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(wrappedValue:_:fileID:line:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}