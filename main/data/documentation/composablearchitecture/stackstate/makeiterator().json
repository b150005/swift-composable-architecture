{"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/stackstate\/makeiterator()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/Collection-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/Collection-Implementations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/makeIterator()","interfaceLanguage":"swift"},"metadata":{"role":"symbol","symbolKind":"method","title":"makeIterator()","roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Iterator","type":"codeVoice"},{"type":"text","text":" is "},{"code":"IndexingIterator<Self>","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"text":"IndexingIterator","kind":"typeIdentifier","preciseIdentifier":"s:s16IndexingIteratorV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"externalID":"s:Slss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF::SYNTHESIZED::s:22ComposableArchitecture10StackStateV","extendedModule":"Swift","modules":[{"name":"ComposableArchitecture","relatedModules":["Swift"]}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeIterator"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s16IndexingIteratorV","text":"IndexingIterator","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]}]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Collection.makeIterator()","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"title":"Effect","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/Collection-Implementations":{"title":"Collection Implementations","abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/Collection-Implementations","url":"\/documentation\/composablearchitecture\/stackstate\/collection-implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/makeIterator()":{"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/stackstate\/makeiterator()","conformance":{"constraints":[{"code":"Iterator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"IndexingIterator<Self>","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"makeIterator()","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/makeIterator()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"IndexingIterator","preciseIdentifier":"s:s16IndexingIteratorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigation","title":"Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"title":"StackState","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StackState","kind":"identifier"}],"abstract":[{"type":"text","text":"A list of data representing the content of a navigation stack."}],"url":"\/documentation\/composablearchitecture\/stackstate","navigatorTitle":[{"kind":"identifier","text":"StackState"}],"type":"topic"}}}