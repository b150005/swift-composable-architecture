{"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.buttonRepeatBehavior(_:)"},{"text":".","type":"text"}],"metadata":{"externalID":"s:7SwiftUI4ViewPAAE20buttonRepeatBehavioryQrAA06ButtoneF0VF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","extendedModule":"SwiftUICore","platforms":[{"unavailable":false,"name":"iOS","beta":false,"deprecated":false,"introducedAt":"17.0"},{"unavailable":false,"beta":false,"introducedAt":"14.0","deprecated":false,"name":"macOS"},{"unavailable":false,"name":"tvOS","deprecated":false,"beta":false,"introducedAt":"17.0"},{"name":"watchOS","unavailable":false,"beta":false,"introducedAt":"10.0","deprecated":false}],"role":"symbol","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","title":"buttonRepeatBehavior(_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buttonRepeatBehavior"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI20ButtonRepeatBehaviorV","text":"ButtonRepeatBehavior"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/buttonRepeatBehavior(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/buttonrepeatbehavior(_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"buttonRepeatBehavior","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"behavior","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"ButtonRepeatBehavior","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI20ButtonRepeatBehaviorV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":"\n"}]}],"kind":"declarations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","role":"symbol","deprecated":true,"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"type":"text","text":" views."}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","role":"collectionGroup","title":"View Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","abstract":[],"kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/buttonRepeatBehavior(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buttonRepeatBehavior"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI20ButtonRepeatBehaviorV","kind":"typeIdentifier","text":"ButtonRepeatBehavior"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"kind":"symbol","abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/switchstore\/buttonrepeatbehavior(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/buttonRepeatBehavior(_:)","title":"buttonRepeatBehavior(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","deprecated":true,"title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"}}}