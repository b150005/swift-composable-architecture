{"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.keyboardShortcut(_:modifiers:localization:)","type":"codeVoice"},{"type":"text","text":"."}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"keyboardShortcut","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI13KeyEquivalentV","text":"KeyEquivalent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"modifiers","kind":"externalParam"},{"kind":"text","text":": "},{"text":"EventModifiers","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI14EventModifiersV"},{"text":", ","kind":"text"},{"text":"localization","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI16KeyboardShortcutV","text":"KeyboardShortcut","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Localization","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI16KeyboardShortcutV12LocalizationV"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"keyboardShortcut(_:modifiers:localization:)","role":"symbol","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"extendedModule":"SwiftUICore","roleHeading":"Instance Method","symbolKind":"method","platforms":[{"unavailable":false,"name":"iOS","beta":false,"deprecated":false,"introducedAt":"15.0"},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"12.0","name":"macOS"}],"externalID":"s:7SwiftUI4ViewPAAE16keyboardShortcut_9modifiers12localizationQrAA13KeyEquivalentV_AA14EventModifiersVAA08KeyboardE0V12LocalizationVtF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardShortcut"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI13KeyEquivalentV","text":"KeyEquivalent"},{"kind":"text","text":", "},{"text":"modifiers","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI14EventModifiersV","text":"EventModifiers"},{"kind":"text","text":" = .command, "},{"text":"localization","kind":"externalParam"},{"kind":"text","text":": "},{"text":"KeyboardShortcut","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI16KeyboardShortcutV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI16KeyboardShortcutV12LocalizationV","text":"Localization"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/keyboardshortcut(_:modifiers:localization:)"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/keyboardShortcut(_:modifiers:localization:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","role":"collectionGroup","title":"View Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","abstract":[],"kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/keyboardShortcut(_:modifiers:localization:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore\/keyboardshortcut(_:modifiers:localization:)","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"keyboardShortcut","kind":"identifier"},{"kind":"text","text":"("},{"text":"KeyEquivalent","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI13KeyEquivalentV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"modifiers"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI14EventModifiersV","text":"EventModifiers"},{"kind":"text","text":", "},{"text":"localization","kind":"externalParam"},{"kind":"text","text":": "},{"text":"KeyboardShortcut","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI16KeyboardShortcutV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7SwiftUI16KeyboardShortcutV12LocalizationV","text":"Localization","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"type":"topic","title":"keyboardShortcut(_:modifiers:localization:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/keyboardShortcut(_:modifiers:localization:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","deprecated":true,"title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","role":"symbol","deprecated":true,"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"type":"text","text":" views."}],"kind":"symbol","type":"topic"}}}