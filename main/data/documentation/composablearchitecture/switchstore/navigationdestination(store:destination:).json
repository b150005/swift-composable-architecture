{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"metadata":{"roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewP22ComposableArchitectureE21navigationDestination5store11destinationQrAD5StoreCyAD17PresentationStateVyqd__GAD0K6ActionOyqd_0_GG_qd_1_AIyqd__qd_0_GctAaBRd_1_r1_lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","symbolKind":"method","role":"symbol","platforms":[{"beta":false,"name":"iOS","introducedAt":"16.0","deprecatedAt":"9999.0","unavailable":false,"message":"Pass a binding of a store to 'navigationDestination(item:)' instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-navigation-view-modifiers-with-SwiftUI-modifiers]","deprecated":false},{"deprecated":false,"name":"macOS","deprecatedAt":"9999.0","introducedAt":"13.0","unavailable":false,"beta":false,"message":"Pass a binding of a store to 'navigationDestination(item:)' instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-navigation-view-modifiers-with-SwiftUI-modifiers]"},{"unavailable":false,"name":"tvOS","deprecatedAt":"9999.0","message":"Pass a binding of a store to 'navigationDestination(item:)' instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-navigation-view-modifiers-with-SwiftUI-modifiers]","deprecated":false,"beta":false,"introducedAt":"16.0"},{"introducedAt":"9.0","unavailable":false,"deprecated":false,"beta":false,"deprecatedAt":"9999.0","message":"Pass a binding of a store to 'navigationDestination(item:)' instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-navigation-view-modifiers-with-SwiftUI-modifiers]","name":"watchOS"}],"extendedModule":"SwiftUICore","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"title":"navigationDestination(store:destination:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"navigationDestination"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":", "},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"store"},{"text":": ","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","kind":"typeIdentifier","text":"PresentationState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">>, "},{"text":"destination","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">) -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/navigationDestination(store:destination:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Associates a destination view with a store that can be used to push the view onto a"},{"type":"text","text":" "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"attribute","text":"@preconcurrency"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"navigationDestination","kind":"identifier"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"text":"store","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"text":"PresentationState","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":">>, ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"ViewBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"kind":"text","text":" "},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"text":" : ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A store that is focused on ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","type":"reference","isActive":true},{"text":" for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a screen. When "},{"type":"codeVoice","code":"store"},{"text":"‘s state is non-","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", the system passes a store of unwrapped"},{"text":" ","type":"text"},{"code":"State","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Action"},{"text":" to the modifier’s closure. You use this store to power the content","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in a view that the system pushes onto the navigation stack. If "},{"code":"store","type":"codeVoice"},{"text":"’s state is","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"-ed out, the system pops the view from the stack."}],"type":"paragraph"}],"name":"store"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure returning the content of the destination view."}]}],"name":"destination"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This is a Composable Architecture-friendly version of SwiftUI’s","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"navigationDestination(isPresented:)"},{"text":" view modifier.","type":"text"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/navigationdestination(store:destination:)"]}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Pass a binding of a store to 'navigationDestination(item:)' instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-navigation-view-modifiers-with-SwiftUI-modifiers]"}],"type":"paragraph"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","title":"PresentationAction","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"url":"\/documentation\/composablearchitecture\/presentationaction","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"PresentationAction","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","role":"collectionGroup","title":"View Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","abstract":[],"kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","role":"symbol","title":"Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","deprecated":true,"title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","role":"symbol","deprecated":true,"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"type":"text","text":" views."}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/navigationDestination(store:destination:)":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore\/navigationdestination(store:destination:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"navigationDestination","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"text":"store","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"destination","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"deprecated":true,"abstract":[{"type":"text","text":"Associates a destination view with a store that can be used to push the view onto a"},{"text":" ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":".","type":"text"}],"title":"navigationDestination(store:destination:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/navigationDestination(store:destination:)","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PresentationState"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PresentationState"}],"title":"PresentationState","url":"\/documentation\/composablearchitecture\/presentationstate","abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"kind":"symbol"}}}