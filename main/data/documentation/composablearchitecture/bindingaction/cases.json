{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","symbolKind":"typealias","title":"BindingAction.Cases","navigatorTitle":[{"text":"Cases","kind":"identifier"}],"roleHeading":"Type Alias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cases","kind":"identifier"}],"extendedModule":"CasePaths","modules":[{"relatedModules":["CasePaths"],"name":"ComposableArchitecture"}],"externalID":"s:9CasePaths0A8PathablePAAE5Casesa::SYNTHESIZED::s:22ComposableArchitecture13BindingActionV"},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/Cases"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/CasePathable-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"CasePathable.Cases"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Cases","kind":"identifier"},{"kind":"text","text":" = "},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingaction\/cases"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction/Cases":{"navigatorTitle":[{"text":"Cases","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/Cases","kind":"symbol","type":"topic","title":"BindingAction.Cases","abstract":[],"url":"\/documentation\/composablearchitecture\/bindingaction\/cases","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cases","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction/CasePathable-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/CasePathable-Implementations","url":"\/documentation\/composablearchitecture\/bindingaction\/casepathable-implementations","role":"collectionGroup","type":"topic","kind":"article","title":"CasePathable Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindingAction"}],"url":"\/documentation\/composablearchitecture\/bindingaction","abstract":[{"text":"An action that describes simple mutations to some root state at a writable key path.","type":"text"}],"role":"symbol","title":"BindingAction","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingAction","kind":"identifier"}]}}}