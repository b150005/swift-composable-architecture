{"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending"],"title":"View actions","anchor":"View-actions","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/viewaction(for:)"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"title":"ViewAction(for:)","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewAction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"roleHeading":"Macro","symbolKind":"macro","externalID":"s:22ComposableArchitecture10ViewAction3foryxm_tcAA7ReducerRzAaB0D0Rpzlufm"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"]]},"sections":[],"abstract":[{"type":"text","text":"Provides a view with access to a feature’s "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction"},{"type":"text","text":"s."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending","text":"ViewActionSending","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17ViewActionSendingP"},{"text":") ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewAction","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":".Type) ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":" : ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","preciseIdentifier":"s:22ComposableArchitecture10ViewActionP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"If you want to restrict what actions can be sent from the view you can use this macro along with the","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction"},{"type":"text","text":" protocol. You start by conforming your reducer’s "},{"code":"Action","type":"codeVoice"},{"type":"text","text":" enum to the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction"},{"type":"text","text":" protocol, and moving view-specific actions to its own inner enum:"}]},{"code":["@Reducer","struct Feature {","  struct State { \/* ... *\/ }","  enum Action: ViewAction {","    case loginResponse(Bool)","    case view(View)","","    enum View {","      case loginButtonTapped","    }","  }","  \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Then you can apply the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","type":"reference","isActive":true},{"type":"text","text":" macro to your view by specifying the type of the"},{"type":"text","text":" "},{"text":"reducer that powers the view:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@ViewAction(for: Feature.self)","struct FeatureView: View {","  let store: StoreOf<Feature>","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"text":"The macro does two things:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It adds a "},{"code":"send","type":"codeVoice"},{"text":" method to the view that you can use instead of ","type":"text"},{"type":"codeVoice","code":"store.send"},{"text":". This allows you","type":"text"},{"text":" ","type":"text"},{"text":"to send view actions more simply, without wrapping the action in ","type":"text"},{"type":"codeVoice","code":".view(…)"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"diff","code":[" Button(\"Login\") {","-  store.send(.view(.loginButtonTapped))","+  send(.loginButtonTapped)"," }"]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"It creates warning diagnostics if you try sending actions through ","type":"text"},{"type":"codeVoice","code":"store.send"},{"type":"text","text":" rather than"},{"text":" ","type":"text"},{"type":"text","text":"using the "},{"type":"codeVoice","code":"send"},{"text":" method on the view:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["Button(\"Login\") {","  store.send(.view(.loginButtonTapped))","\/\/┬─────────","\/\/╰─ ⚠️ Do not use 'store.send' directly when using '@ViewAction'","}"]}]}],"type":"unorderedList"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","url":"\/documentation\/composablearchitecture\/viewaction","role":"symbol","abstract":[{"text":"Defines the actions that can be sent from a view.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewAction"}],"title":"ViewAction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewAction"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"title":"Effect","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Action"}],"title":"Action","abstract":[{"text":"A type that holds all possible actions that cause the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true,"type":"reference"},{"type":"text","text":" of the reducer to change"},{"type":"text","text":" "},{"text":"and\/or kick off a side ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"type":"text","text":" that can communicate with the outside world."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/action","required":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","role":"symbol","title":"Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"title":"State","abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","required":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewActionSending":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending","url":"\/documentation\/composablearchitecture\/viewactionsending","role":"symbol","abstract":[{"type":"text","text":"A type that represents a view with a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"type":"text","text":" that can send "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","type":"reference"},{"text":"s.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ViewActionSending","kind":"identifier"}],"title":"ViewActionSending","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewActionSending"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction(for:)":{"title":"ViewAction(for:)","kind":"symbol","abstract":[{"type":"text","text":"Provides a view with access to a feature’s "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","type":"reference","isActive":true},{"type":"text","text":"s."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/viewaction(for:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewAction"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":".Type)"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","navigatorTitle":[{"text":"Reducer","kind":"identifier"}]}}}