{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-6gegl","interfaceLanguage":"swift"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'if let' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-IfLetStore-with-if-let]"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/init(_:then:else:)-6gegl"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"symbolKind":"init","title":"init(_:then:else:)","role":"symbol","roleHeading":"Initializer","externalID":"s:22ComposableArchitecture10IfLetStoreV_4then4elseACyxq_7SwiftUI19_ConditionalContentVyqd__qd_0_GGAA0E0CyxSgq_G_qd__ALyxq_Gcqd_0_yXEtcAIRs0_AF4ViewRd__AfPRd_0_r0_lufc","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"else"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"ElseContent"},{"text":")","kind":"text"}],"platforms":[],"modules":[{"name":"ComposableArchitecture"}]},"abstract":[{"text":"Initializes an ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","isActive":true},{"text":" view that computes content depending on if a store of optional","type":"text"},{"type":"text","text":" "},{"text":"state is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" or non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"IfContent"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"store"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">, ","kind":"text"},{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder"},{"kind":"text","text":" "},{"kind":"externalParam","text":"then"},{"kind":"text","text":" "},{"text":"ifContent","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder"},{"kind":"text","text":" "},{"text":"else","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"elseContent","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":" == "},{"text":"_ConditionalContent","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A store of optional state.","type":"text"}],"type":"paragraph"}],"name":"store"},{"content":[{"inlineContent":[{"type":"text","text":"A function that is given a store of non-optional state and returns a view that"},{"text":" ","type":"text"},{"text":"is visible only when the optional state is non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"ifContent"},{"name":"elseContent","content":[{"inlineContent":[{"type":"text","text":"A view that is only visible when the optional state is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","role":"symbol","title":"Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","title":"IfLetStore","deprecated":true,"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:then:else:)-6gegl":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-6gegl","kind":"symbol","abstract":[{"text":"Initializes an ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","isActive":true},{"text":" view that computes content depending on if a store of optional","type":"text"},{"type":"text","text":" "},{"type":"text","text":"state is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"title":"init(_:then:else:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ElseContent"},{"text":">(","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?, "},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"then"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"IfContent","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:then:else:)-6gegl","deprecated":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"}}}