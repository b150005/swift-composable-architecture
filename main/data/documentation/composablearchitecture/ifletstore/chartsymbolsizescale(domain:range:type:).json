{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolSizeScale(domain:range:type:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"platforms":[{"name":"iOS","deprecated":false,"introducedAt":"16.0","unavailable":false,"beta":false},{"beta":false,"unavailable":false,"introducedAt":"13.0","name":"macOS","deprecated":false},{"introducedAt":"16.0","unavailable":false,"deprecated":false,"beta":false,"name":"tvOS"},{"name":"watchOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"9.0"}],"externalID":"s:7SwiftUI4ViewP6ChartsE20chartSymbolSizeScale6domain5range4typeQrqd___qd_0_AD0H4TypeVSgtAD0H6DomainRd__AD0H5RangeRd_0_14CoreFoundation7CGFloatV11VisualValueRtd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","role":"symbol","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartSymbolSizeScale"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Domain"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Range"},{"kind":"text","text":">("},{"kind":"externalParam","text":"domain"},{"text":": ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"range","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Charts9ScaleTypeV","kind":"typeIdentifier","text":"ScaleType"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"title":"chartSymbolSizeScale(domain:range:type:)","symbolKind":"method","extendedModule":"SwiftUICore","roleHeading":"Instance Method"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.chartSymbolSizeScale(domain:range:type:)"},{"text":".","type":"text"}],"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartsymbolsizescale(domain:range:type:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartSymbolSizeScale"},{"text":"<","kind":"text"},{"text":"Domain","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Range"},{"text":">(","kind":"text"},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Domain"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Range"},{"kind":"text","text":", "},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ScaleType","preciseIdentifier":"s:6Charts9ScaleTypeV","kind":"typeIdentifier"},{"text":"? = nil) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:6Charts11ScaleDomainP","text":"ScaleDomain","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Range"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:6Charts10ScaleRangeP","text":"ScaleRange","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Range"},{"text":".","kind":"text"},{"text":"VisualValue","preciseIdentifier":"s:6Charts10ScaleRangeP11VisualValueQa","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","title":"IfLetStore","deprecated":true,"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartSymbolSizeScale(domain:range:type:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartSymbolSizeScale"},{"text":"<","kind":"text"},{"text":"Domain","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Range"},{"text":">(","kind":"text"},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Domain"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"range"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"type","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Charts9ScaleTypeV","text":"ScaleType","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/chartsymbolsizescale(domain:range:type:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolSizeScale(domain:range:type:)","title":"chartSymbolSizeScale(domain:range:type:)","abstract":[],"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","role":"collectionGroup"}}}