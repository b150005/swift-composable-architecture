{"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.chartSymbolScale(_:)","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"role":"symbol","extendedModule":"SwiftUICore","title":"chartSymbolScale(_:)","symbolKind":"method","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"platforms":[{"unavailable":false,"beta":false,"name":"iOS","deprecated":false,"introducedAt":"16.0"},{"deprecated":false,"introducedAt":"13.0","unavailable":false,"beta":false,"name":"macOS"},{"introducedAt":"16.0","beta":false,"name":"tvOS","deprecated":false,"unavailable":false},{"deprecated":false,"name":"watchOS","beta":false,"introducedAt":"9.0","unavailable":false}],"externalID":"s:7SwiftUI4ViewP6ChartsE16chartSymbolScaleyQrs13KeyValuePairsVyqd__AD05ChartF5Shape_pGAD9PlottableRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DataValue"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s13KeyValuePairsV","kind":"typeIdentifier","text":"KeyValuePairs"},{"kind":"text","text":"<"},{"text":"DataValue","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:6Charts16ChartSymbolShapeP","text":"ChartSymbolShape","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartsymbolscale(_:)-8jdo5"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolScale(_:)-8jdo5","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DataValue"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"mapping"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyValuePairs","preciseIdentifier":"s:s13KeyValuePairsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DataValue"},{"kind":"text","text":", any "},{"text":"ChartSymbolShape","kind":"typeIdentifier","preciseIdentifier":"s:6Charts16ChartSymbolShapeP"},{"kind":"text","text":">) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"DataValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Plottable","preciseIdentifier":"s:6Charts9PlottableP"},{"text":"\n","kind":"text"}]}]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartSymbolScale(_:)-8jdo5":{"url":"\/documentation\/composablearchitecture\/ifletstore\/chartsymbolscale(_:)-8jdo5","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolScale(_:)-8jdo5","title":"chartSymbolScale(_:)","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"chartSymbolScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DataValue","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13KeyValuePairsV","text":"KeyValuePairs"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DataValue"},{"text":", any ","kind":"text"},{"text":"ChartSymbolShape","kind":"typeIdentifier","preciseIdentifier":"s:6Charts16ChartSymbolShapeP"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","title":"IfLetStore","deprecated":true,"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol"}}}