{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartScrollPosition(x:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartscrollposition(x:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"extendedModule":"SwiftUICore","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"chartScrollPosition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"x","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<some ","kind":"text"},{"preciseIdentifier":"s:6Charts9PlottableP","kind":"typeIdentifier","text":"Plottable"},{"text":">) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"externalID":"s:7SwiftUI4ViewP6ChartsE19chartScrollPosition1xQrAA7BindingVyqd__G_tAD9PlottableRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","symbolKind":"method","platforms":[{"introducedAt":"17.0","beta":false,"name":"iOS","deprecated":false,"unavailable":false},{"deprecated":false,"name":"macOS","beta":false,"introducedAt":"14.0","unavailable":false},{"deprecated":false,"unavailable":false,"introducedAt":"17.0","beta":false,"name":"tvOS"},{"deprecated":false,"name":"watchOS","unavailable":false,"introducedAt":"10.0","beta":false}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"role":"symbol","title":"chartScrollPosition(x:)","roleHeading":"Instance Method"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.chartScrollPosition(x:)","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartScrollPosition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"x","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<some ","kind":"text"},{"preciseIdentifier":"s:6Charts9PlottableP","text":"Plottable","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartScrollPosition(x:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartScrollPosition(x:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"chartScrollPosition","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"x"},{"text":": ","kind":"text"},{"text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier"},{"text":"<some ","kind":"text"},{"kind":"typeIdentifier","text":"Plottable","preciseIdentifier":"s:6Charts9PlottableP"},{"text":">) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"kind":"symbol","abstract":[],"title":"chartScrollPosition(x:)","url":"\/documentation\/composablearchitecture\/ifletstore\/chartscrollposition(x:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","title":"IfLetStore","deprecated":true,"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol"}}}