{"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.symbolEffect(_:options:value:)"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/symboleffect(_:options:value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"symbolEffect","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"text":"U","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"effect","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Symbols19SymbolEffectOptionsV","kind":"typeIdentifier","text":"SymbolEffectOptions"},{"text":" = .default, ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"U"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"text":"DiscreteSymbolEffect","kind":"typeIdentifier","preciseIdentifier":"s:7Symbols20DiscreteSymbolEffectP"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"SymbolEffect","preciseIdentifier":"s:7Symbols12SymbolEffectP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"U"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"},{"kind":"text","text":"\n"}]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/symbolEffect(_:options:value:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"platforms":[{"deprecated":false,"introducedAt":"17.0","unavailable":false,"name":"iOS","beta":false},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"14.0","name":"macOS"},{"deprecated":false,"introducedAt":"17.0","name":"tvOS","unavailable":false,"beta":false},{"name":"watchOS","deprecated":false,"unavailable":false,"introducedAt":"10.0","beta":false}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","extendedModule":"SwiftUICore","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"title":"symbolEffect(_:options:value:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"symbolEffect","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SymbolEffectOptions","kind":"typeIdentifier","preciseIdentifier":"s:7Symbols19SymbolEffectOptionsV"},{"kind":"text","text":", "},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"externalID":"s:7SwiftUI4ViewPAAE12symbolEffect_7options5valueQrqd___7Symbols06SymbolE7OptionsVqd_0_tAG08DiscreteiE0Rd__AG0iE0Rd__SQRd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","title":"View Implementations","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/symbolEffect(_:options:value:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"symbolEffect"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"U"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Symbols19SymbolEffectOptionsV","text":"SymbolEffectOptions","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"U"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"url":"\/documentation\/composablearchitecture\/caselet\/symboleffect(_:options:value:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/symbolEffect(_:options:value:)","kind":"symbol","abstract":[],"title":"symbolEffect(_:options:value:)","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","role":"symbol","deprecated":true,"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"type":"text","text":" views."}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","deprecated":true,"title":"CaseLet"}}}