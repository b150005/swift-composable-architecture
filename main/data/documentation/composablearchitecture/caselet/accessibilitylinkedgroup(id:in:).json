{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/accessibilitylinkedgroup(id:in:)"]}],"kind":"symbol","metadata":{"role":"symbol","platforms":[{"introducedAt":"14.0","unavailable":false,"beta":false,"name":"iOS","deprecated":false},{"introducedAt":"11.0","deprecated":false,"beta":false,"name":"macOS","unavailable":false},{"name":"tvOS","deprecated":false,"unavailable":false,"introducedAt":"14.0","beta":false},{"introducedAt":"7.0","unavailable":false,"deprecated":false,"name":"watchOS","beta":false}],"symbolKind":"method","title":"accessibilityLinkedGroup(id:in:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"accessibilityLinkedGroup","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ID"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"text":", ","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9NamespaceV","text":"Namespace","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV","text":"ID"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"extendedModule":"SwiftUICore","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"externalID":"s:7SwiftUI4ViewPAAE24accessibilityLinkedGroup2id2inQrqd___AA9NamespaceV2IDVtSHRd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.accessibilityLinkedGroup(id:in:)"},{"type":"text","text":"."}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/accessibilityLinkedGroup(id:in:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"accessibilityLinkedGroup"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ID"},{"kind":"text","text":">("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"namespace","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9NamespaceV","text":"Namespace","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"ID","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"ID","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/accessibilityLinkedGroup(id:in:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"accessibilityLinkedGroup","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ID"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"text":"Namespace","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/accessibilityLinkedGroup(id:in:)","title":"accessibilityLinkedGroup(id:in:)","url":"\/documentation\/composablearchitecture\/caselet\/accessibilitylinkedgroup(id:in:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","role":"symbol","deprecated":true,"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"type":"text","text":" views."}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","deprecated":true,"title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","title":"View Implementations","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"}}}