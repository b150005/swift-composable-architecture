{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/oncutcommand(perform:)"]}],"metadata":{"symbolKind":"method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onCutCommand","kind":"identifier"},{"kind":"text","text":"("},{"text":"perform","kind":"externalParam"},{"kind":"text","text":": (() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSItemProvider","text":"NSItemProvider"},{"kind":"text","text":"])?) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"platforms":[{"introducedAt":"10.15","deprecated":false,"unavailable":false,"name":"macOS","beta":false}],"roleHeading":"Instance Method","role":"symbol","extendedModule":"SwiftUICore","title":"onCutCommand(perform:)","externalID":"s:7SwiftUI4ViewPAAE12onCutCommand7performQrSaySo14NSItemProviderCGycSg_tF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onCutCommand"},{"kind":"text","text":"("},{"text":"perform","kind":"externalParam"},{"kind":"text","text":" "},{"text":"payloadAction","kind":"internalParam"},{"text":": (() -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSItemProvider","text":"NSItemProvider"},{"kind":"text","text":"])?) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":"\n"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.onCutCommand(perform:)","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/onCutCommand(perform:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/onCutCommand(perform:)":{"title":"onCutCommand(perform:)","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onCutCommand"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"kind":"text","text":": (() -> ["},{"text":"NSItemProvider","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSItemProvider"},{"kind":"text","text":"])?) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"url":"\/documentation\/composablearchitecture\/caselet\/oncutcommand(perform:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/onCutCommand(perform:)","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","title":"View Implementations","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","role":"symbol","deprecated":true,"title":"SwitchStore","url":"\/documentation\/composablearchitecture\/switchstore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"type":"text","text":" views."}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","deprecated":true,"title":"CaseLet"}}}