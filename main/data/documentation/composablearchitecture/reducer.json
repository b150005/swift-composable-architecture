{"topicSections":[{"title":"Implementing a reducer","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"],"anchor":"Implementing-a-reducer"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers"],"title":"Composing reducers","anchor":"Composing-reducers"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],"anchor":"Embedding-child-features","title":"Embedding child features"},{"title":"Sharing state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey"],"anchor":"Sharing-state"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional"],"title":"Supporting reducers","anchor":"Supporting-reducers"},{"title":"Reducer modifiers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/transformDependency(_:transform:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/onChange(of:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/signpost(_:log:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/_printChanges(_:)"],"anchor":"Reducer-modifiers"},{"title":"Supporting types","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerOf"],"anchor":"Supporting-types"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations"],"anchor":"Deprecations","title":"Deprecations"},{"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-6zye8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-o1gn","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:fileID:filePath:line:column:)-9blhe"],"anchor":"Instance-Methods","generated":true}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer"],"type":"inheritedBy","title":"Inherited By"},{"kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"],"type":"conformingTypes","title":"Conforming Types"}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"role":"symbol","symbolKind":"protocol","title":"Reducer","roleHeading":"Protocol","externalID":"s:22ComposableArchitecture7ReducerP","navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/composablearchitecture\/reducer"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],"anchor":"State-management","title":"State management","generated":true}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"text":"The ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"text":" protocol describes how to evolve the current state of an application to the next","type":"text"},{"type":"text","text":" "},{"text":"state, given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":"s should be executed later by the store, if","type":"text"},{"type":"text","text":" "},{"type":"text","text":"any. Types that conform to this protocol represent the domain, logic and behavior for a feature."},{"type":"text","text":" "},{"text":"Conformances to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"text":" can be written by hand, but the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true,"type":"reference"},{"text":" can make your reducers","type":"text"},{"text":" ","type":"text"},{"text":"more concise and more powerful.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Conforming-to-the-Reducer-protocol"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#Using-the-Reducer-macro","isActive":true}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"#CasePathable-and-dynamicMemberLookup-enums","type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"#Automatic-fulfillment-of-reducer-requirements"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#Destination-and-path-reducers","isActive":true,"type":"reference"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"#Navigating-to-non-reducer-features","type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"#Synthesizing-protocol-conformances-on-State-and-Action"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#Nested-enum-reducers","isActive":true,"type":"reference"}]}]}]}]},{"content":[{"inlineContent":[{"identifier":"#Gotchas","isActive":true,"type":"reference"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"#Autocomplete","type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"#Preview-and-enum-reducers"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#CI-build-failures","isActive":true}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]}]},{"level":2,"text":"Conforming to the Reducer protocol","anchor":"Conforming-to-the-Reducer-protocol","type":"heading"},{"inlineContent":[{"type":"text","text":"The bare minimum of conforming to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"text":" protocol is to provide a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true,"type":"reference"},{"text":" type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that represents the state your feature needs to do its job, a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","type":"reference"},{"type":"text","text":" type that"},{"type":"text","text":" "},{"type":"text","text":"represents the actions users can perform in your feature (as well as actions that effects can"},{"text":" ","type":"text"},{"text":"feed back into the system), and a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","type":"reference"},{"type":"text","text":" property that compose your feature"},{"text":" ","type":"text"},{"type":"text","text":"together with any other features that are needed (such as for navigation)."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"As a very simple example, a “counter” feature could model its state as a struct holding an integer:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct CounterFeature: Reducer {","  @ObservableState","  struct State {","    var count = 0","  }","}"]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We have added the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","isActive":true},{"type":"text","text":" to "},{"type":"codeVoice","code":"State"},{"type":"text","text":" here so that the view can automatically"},{"type":"text","text":" "},{"text":"observe state changes. In future versions of the library this macro will be automatically applied","type":"text"},{"type":"text","text":" "},{"text":"by the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true,"type":"reference"},{"text":" macro.","type":"text"}]}],"style":"note","name":"Note"},{"type":"paragraph","inlineContent":[{"text":"The actions would be just two cases for tapping an increment or decrement button:","type":"text"}]},{"code":["struct CounterFeature: Reducer {","  \/\/ ...","  enum Action {","    case decrementButtonTapped","    case incrementButtonTapped","  }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The logic of your feature is implemented by mutating the feature’s current state when an action","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"comes into the system. This is most easily done by constructing a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","isActive":true,"type":"reference"},{"type":"text","text":" inside the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t"},{"type":"text","text":" of your reducer:"}]},{"code":["struct CounterFeature: Reducer {","  \/\/ ...","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .decrementButtonTapped:","        state.count -= 1","        return .none","      case .incrementButtonTapped:","        state.count += 1  ","        return .none","      }","    }","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","isActive":true,"type":"reference"},{"type":"text","text":" reducer’s first responsibility is to mutate the feature’s current state given an"},{"text":" ","type":"text"},{"text":"action. Its second responsibility is to return effects that will be executed asynchronously and feed","type":"text"},{"type":"text","text":" "},{"text":"their data back into the system. Currently ","type":"text"},{"code":"Feature","type":"codeVoice"},{"text":" does not need to run any effects, and so","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/none","isActive":true},{"text":" is returned.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the feature does need to do effectful work, then more would need to be done. For example, suppose"},{"type":"text","text":" "},{"type":"text","text":"the feature has the ability to start and stop a timer, and with each tick of the timer the "},{"type":"codeVoice","code":"count"},{"text":" ","type":"text"},{"text":"will be incremented. That could be done like so:","type":"text"}]},{"syntax":"swift","code":["struct CounterFeature: Reducer {","  @ObservableState","  struct State {","    var count = 0","  }","  enum Action {","    case decrementButtonTapped","    case incrementButtonTapped","    case startTimerButtonTapped","    case stopTimerButtonTapped","    case timerTick","  }","  enum CancelID { case timer }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .decrementButtonTapped:","        state.count -= 1","        return .none","","      case .incrementButtonTapped:","        state.count += 1","        return .none","","      case .startTimerButtonTapped:","        return .run { send in","          while true {","            try await Task.sleep(for: .seconds(1))","            await send(.timerTick)","          }","        }","        .cancellable(CancelID.timer)","","      case .stopTimerButtonTapped:","        return .cancel(CancelID.timer)","","      case .timerTick:","        state.count += 1","        return .none","      }","    }","  }","}"],"type":"codeListing"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This sample emulates a timer by performing an infinite loop with a "},{"code":"Task.sleep","type":"codeVoice"},{"text":" inside. This","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is simple to do, but is also inaccurate since small imprecisions can accumulate. It would be"},{"type":"text","text":" "},{"type":"text","text":"better to inject a clock into the feature so that you could use its "},{"type":"codeVoice","code":"timer"},{"type":"text","text":" method. Read the"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement"},{"text":" and ","type":"text"},{"type":"text","text":"doc:Testing"},{"type":"text","text":" articles for more information."}]}],"name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"That is the basics of implementing a feature as a conformance to "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"type":"heading","level":2,"anchor":"Using-the-Reducer-macro","text":"Using the @Reducer macro"},{"inlineContent":[{"text":"While you technically can conform to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"type":"text","text":" protocol directly, as we did above, the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"type":"text","text":" macro can automate many aspects of implementing features for you. At a bare minimum,"},{"type":"text","text":" "},{"text":"all you have to do is annotate your reducer with ","type":"text"},{"type":"codeVoice","code":"@Reducer"},{"text":" and you can even drop the ","type":"text"},{"code":"Reducer","type":"codeVoice"},{"type":"text","text":" "},{"text":"conformance:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["+@Reducer","-struct CounterFeature: Reducer {","+struct CounterFeature {","   @ObservableState","   struct State {","     var count = 0","   }","   enum Action {","     case decrementButtonTapped","     case incrementButtonTapped","   }","   var body: some ReducerOf<Self> {","     Reduce { state, action in","       switch action {","       case .decrementButtonTapped:","         state.count -= 1","         return .none","       case .incrementButtonTapped:","         state.count += 1  ","         return .none","       }","     }","   }"," }"],"syntax":"diff"},{"inlineContent":[{"type":"text","text":"There are a number of things the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" macro does for you:"}],"type":"paragraph"},{"text":"@CasePathable and @dynamicMemberLookup enums","level":3,"type":"heading","anchor":"CasePathable-and-dynamicMemberLookup-enums"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"type":"text","text":" macro automatically applies the "},{"isActive":true,"type":"reference","identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-case-paths\/main\/documentation\/casepaths\/casepathable()"},{"text":" macro to your","type":"text"},{"type":"text","text":" "},{"code":"Action","type":"codeVoice"},{"text":" enum:","type":"text"}]},{"type":"codeListing","code":["+@CasePathable"," enum Action {","   \/\/ ..."," }"],"syntax":"diff"},{"inlineContent":[{"identifier":"http:\/\/github.com\/pointfreeco\/swift-case-paths","isActive":true,"type":"reference"},{"text":" are a tool that bring the power and ergonomics of key paths to enum","type":"text"},{"type":"text","text":" "},{"type":"text","text":"cases, and they are a vital tool for composing reducers together."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In particular, having this macro applied to your "},{"code":"Action","type":"codeVoice"},{"text":" enum will allow you to use key path","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"syntax for specifying enum cases in various APIs in the library, such as"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q"},{"text":",","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"},{"type":"text","text":", and more."}]},{"inlineContent":[{"text":"Further, if the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},{"text":" of your feature is an enum, which is useful for modeling a feature","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that can be one of multiple mutually exclusive values, the "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference"},{"type":"text","text":" will apply the"},{"type":"text","text":" "},{"type":"codeVoice","code":"@CasePathable"},{"text":" macro, as well as ","type":"text"},{"code":"@dynamicMemberLookup","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["+@CasePathable","+@dynamicMemberLookup"," enum State {","   \/\/ ..."," }"],"syntax":"diff"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will allow you to use key path syntax for specifying case paths to the "},{"code":"State","type":"codeVoice"},{"type":"text","text":"’s cases, as well"},{"type":"text","text":" "},{"type":"text","text":"as allow you to use dot-chaining syntax for optionally extracting a case from the state. This can be"},{"type":"text","text":" "},{"text":"useful when using the operators that come with the library that allow for driving navigation from an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"enum of options:"}]},{"syntax":"swift","code":[".sheet(","  item: $store.scope(state: \\.destination?.editForm, action: \\.destination.editForm)",") { store in","  FormView(store: store)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The syntax ","type":"text"},{"code":"state: \\.destination?.editForm","type":"codeVoice"},{"type":"text","text":" is only possible due to both "},{"code":"@dynamicMemberLookup","type":"codeVoice"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@CasePathable"},{"text":" being applied to the ","type":"text"},{"type":"codeVoice","code":"State"},{"text":" enum.","type":"text"}]},{"type":"heading","text":"Automatic fulfillment of reducer requirements","anchor":"Automatic-fulfillment-of-reducer-requirements","level":3},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference"},{"text":" macro will automatically fill in any ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" protocol requirements that you"},{"type":"text","text":" "},{"type":"text","text":"leave off. For example, something as simple as this compiles:"}],"type":"paragraph"},{"type":"codeListing","code":["@Reducer","struct Feature {}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@Reducer"},{"type":"text","text":" macro will automatically insert an empty "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true},{"text":" struct, an empty","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"},{"type":"text","text":" enum, and an empty "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","isActive":true,"type":"reference"},{"type":"text","text":". This effectively means that"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Feature"},{"type":"text","text":" is a logicless, behaviorless, inert reducer."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Having these requirements automatically fulfilled for you can be handy for slowly filling them in"},{"type":"text","text":" "},{"type":"text","text":"with their real implementations. For example, this "},{"type":"codeVoice","code":"Feature"},{"text":" reducer could be integrated in a parent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"domain using the library’s navigation tools, all without having implemented any of the domain yet."},{"type":"text","text":" "},{"text":"Then, once we are ready we can start implementing the real logic and behavior of the feature.","type":"text"}]},{"anchor":"Destination-and-path-reducers","text":"Destination and path reducers","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is a common pattern in the Composable Architecture of representing destinations a feature can"},{"type":"text","text":" "},{"text":"navigate to as a reducer that operates on enum state, with a case for each feature that can be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"navigated to. This is explained in great detail in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","isActive":true},{"type":"text","text":" articles."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This form of domain modeling can be very powerful, but also incur a bit of boilerplate. For example,"},{"type":"text","text":" "},{"text":"if a feature can navigate to 3 other features, then one might have a ","type":"text"},{"code":"Destination","type":"codeVoice"},{"type":"text","text":" reducer like the"},{"type":"text","text":" "},{"type":"text","text":"following:"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct Destination {","  @ObservableState","  enum State {","    case add(FormFeature.State)","    case detail(DetailFeature.State)","    case edit(EditFeature.State)","  }","  enum Action {","    case add(FormFeature.Action)","    case detail(DetailFeature.Action)","    case edit(EditFeature.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.add, action: \\.add) {","      FormFeature()","    }","    Scope(state: \\.detail, action: \\.detail) {","      DetailFeature()","    }","    Scope(state: \\.edit, action: \\.edit) {","      EditFeature()","    }","  }","}"]},{"inlineContent":[{"text":"It’s not the worst code in the world, but it is 24 lines with a lot of repetition, and if we need to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"add a new destination we must add a case to the "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"reference"},{"text":" enum, a case to the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","isActive":true,"type":"reference"},{"type":"text","text":" enum, and a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true,"type":"reference"},{"text":" to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"text":" macro is now capable of generating all of this code for you from the following","type":"text"},{"type":"text","text":" "},{"text":"simple declaration","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","enum Destination {","  case add(FormFeature)","  case detail(DetailFeature)","  case edit(EditFeature)","}"]},{"inlineContent":[{"text":"24 lines of code has become 6. The ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"type":"text","text":" macro can now be applied to an "},{"inlineContent":[{"type":"text","text":"enum"}],"type":"emphasis"},{"text":" where each case","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"holds onto the reducer that governs the logic and behavior for that case. Further, when using the"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:)"},{"text":" operator with this style of ","type":"text"},{"type":"codeVoice","code":"Destination"},{"text":" enum reducer you can","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"completely leave off the trailing closure as it can be automatically inferred:"}],"type":"paragraph"},{"type":"codeListing","syntax":"diff","code":[" Reduce { state, action in","   \/\/ Core feature logic"," }"," .ifLet(\\.$destination, action: \\.destination)","-{","-  Destination()","-}"]},{"inlineContent":[{"type":"text","text":"This pattern also works for "},{"code":"Path","type":"codeVoice"},{"type":"text","text":" reducers, which is common when dealing with"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","type":"reference","isActive":true},{"text":", and in that case you can leave off the trailing closure of the","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)"},{"type":"text","text":" operator:"}],"type":"paragraph"},{"code":["Reduce { state, action in","  \/\/ Core feature logic","}",".forEach(\\.path, action: \\.path)","-{","-  Path()","-}"],"type":"codeListing","syntax":"diff"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Further, for "},{"code":"Path","type":"codeVoice"},{"text":" reducers in particular, the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true,"type":"reference"},{"text":" macro also helps you reduce","type":"text"},{"type":"text","text":" "},{"type":"text","text":"boilerplate when using the initializer"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)"},{"type":"text","text":" that comes with the library."},{"text":" ","type":"text"},{"type":"text","text":"In the last trailing closure you can use the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case","isActive":true,"type":"reference"},{"type":"text","text":" computed property to switch on the"},{"type":"text","text":" "},{"code":"Path.State","type":"codeVoice"},{"type":"text","text":" enum and extract out a store for each case:"}]},{"syntax":"swift","type":"codeListing","code":["NavigationStack(path: $store.scope(state: \\.path, action: \\.path)) {","  \/\/ Root view","} destination: { store in","  switch store.case {","  case let .add(store):","    AddView(store: store)","  case let .detail(store):","    DetailView(store: store)","  case let .edit(store):","    EditView(store: store)","  }","}"]},{"anchor":"Navigating-to-non-reducer-features","level":4,"type":"heading","text":"Navigating to non-reducer features"},{"inlineContent":[{"type":"text","text":"There are many times that you want to present or navigate to a feature that is not modeled with a"},{"type":"text","text":" "},{"text":"Composable Architecture reducer. This can happen with legacy features that are not built with the","type":"text"},{"type":"text","text":" "},{"text":"Composable Architecture, or with features that are very simple and do not need a fully built","type":"text"},{"type":"text","text":" "},{"text":"reducer.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"In those cases you can use the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","isActive":true},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()"},{"text":" macros to","type":"text"},{"type":"text","text":" "},{"text":"annotate cases that are not powered by reducers. See the documentation for those macros for more","type":"text"},{"type":"text","text":" "},{"type":"text","text":"details."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As an example, suppose that you have a feature that can navigate to multiple features, all of"},{"text":" ","type":"text"},{"type":"text","text":"which are Composable Architecture features except for one:"}]},{"type":"codeListing","code":["@Reducer","enum Destination {","  case add(AddItemFeature)","  case edit(EditItemFeature)","  @ReducerCaseIgnored","  case item(Item)","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"In this situation the "},{"type":"codeVoice","code":".item"},{"text":" case holds onto a plain item and not a full reducer, and for that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reason we have to ignore it from some of "},{"type":"codeVoice","code":"@Reducer"},{"text":"’s macro expansion.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, to present a view from this case one can do:"}]},{"code":[".sheet(item: $store.scope(state: \\.destination?.item, action: \\.destination.item)) { store in","  ItemView(item: store.withState { $0 })","}"],"type":"codeListing","syntax":"swift"},{"name":"Note","content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","isActive":true},{"type":"text","text":" is necessary because the value held inside the "},{"type":"codeVoice","code":".item"},{"text":" case","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"does not have the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","isActive":true},{"text":" macro applied, nor should it. And so using ","type":"text"},{"code":"withState","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"is a way to get access to the state in the store without any observation taking place."}],"type":"paragraph"}],"type":"aside","style":"note"},{"type":"heading","anchor":"Synthesizing-protocol-conformances-on-State-and-Action","text":"Synthesizing protocol conformances on State and Action","level":4},{"inlineContent":[{"type":"text","text":"Since the "},{"type":"codeVoice","code":"State"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" types are generated automatically for you when using "},{"code":"@Reducer","type":"codeVoice"},{"type":"text","text":" on an"},{"text":" ","type":"text"},{"text":"enum, you must extend these types yourself to synthesize conformances of ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":", ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"text":"etc.","type":"text"}]},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@Reducer","enum Destination {","  \/\/ ...","}","extension Destination.State: Equatable {}"]},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In Swift <6 the above extension causes a compiler error due to a bug in Swift."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To work around this compiler bug, the library provides a version of the "},{"type":"codeVoice","code":"@Reducer"},{"text":" macro that","type":"text"},{"type":"text","text":" "},{"text":"takes two ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_SynthesizedConformance","isActive":true},{"type":"text","text":" arguments, which allow you to"},{"type":"text","text":" "},{"type":"text","text":"describe the protocols you want to attach to the "},{"type":"codeVoice","code":"State"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" types:"}]},{"syntax":"swift","code":["@Reducer(state: .equatable, .sendable, action: .sendable)","enum Destination {","  \/\/ ...","}"],"type":"codeListing"}]},{"anchor":"Nested-enum-reducers","type":"heading","text":"Nested enum reducers","level":4},{"inlineContent":[{"type":"text","text":"There may be times when an enum reducer may want to nest another enum reducer. To do so, the parent"},{"type":"text","text":" "},{"type":"text","text":"enum reducer must specify the child’s "},{"type":"codeVoice","code":"Body"},{"type":"text","text":" associated value and "},{"type":"codeVoice","code":"body"},{"text":" static property explicitly:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","enum Modal { \/* ... *\/ }","","@Reducer","enum Destination {","  case modal(Modal.Body = Modal.body)","}"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Gotchas","type":"heading","anchor":"Gotchas"},{"text":"Autocomplete","level":4,"type":"heading","anchor":"Autocomplete"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Applying "},{"type":"codeVoice","code":"@Reducer"},{"type":"text","text":" can break autocompletion in the "},{"type":"codeVoice","code":"body"},{"text":" of the reducer. This is a known","type":"text"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/apple\/swift\/issues\/69477","isActive":true,"type":"reference"},{"type":"text","text":", and it can generally be worked around by"},{"type":"text","text":" "},{"text":"providing additional type hints to the compiler:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding an explicit "},{"code":"Reducer","type":"codeVoice"},{"type":"text","text":" conformance in addition to the macro application can restore"},{"text":" ","type":"text"},{"type":"text","text":"autocomplete throughout the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" of the reducer:"}]},{"syntax":"diff","code":[" @Reducer","-struct Feature {","+struct Feature: Reducer {"],"type":"codeListing"}]},{"content":[{"inlineContent":[{"type":"text","text":"Adding explicit generics to instances of "},{"type":"codeVoice","code":"Reduce"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" can restore autocomplete"},{"type":"text","text":" "},{"type":"text","text":"inside the "},{"type":"codeVoice","code":"Reduce"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"diff","code":[" var body: some Reducer<State, Action> {","-  Reduce { state, action in","+  Reduce<State, Action> { state, action in"],"type":"codeListing"}]}]},{"type":"heading","level":4,"text":"#Preview and enum reducers","anchor":"Preview-and-enum-reducers"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"#Preview","type":"codeVoice"},{"text":" macro is not capable of seeing the expansion of any macros since it is a macro","type":"text"},{"type":"text","text":" "},{"text":"itself. This means that when using destination and path reducers (see","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Destination-and-path-reducers","isActive":true},{"text":" above) you cannot construct the cases of the state","type":"text"},{"type":"text","text":" "},{"type":"text","text":"enum inside "},{"code":"#Preview","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["#Preview {","  FeatureView(","    store: Store(","      initialState: Feature.State(","        destination: .edit(EditFeature.State())  \/\/ 🛑","      )","    ) {","      Feature()","    }","  )","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":".edit"},{"text":" case is not usable from within ","type":"text"},{"type":"codeVoice","code":"#Preview"},{"text":" since it is generated by the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"macro."}]},{"inlineContent":[{"text":"The workaround is to move the view to a helper that be compiled outside of a macro, and then use it","type":"text"},{"type":"text","text":" "},{"text":"inside the macro:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["#Preview {","  preview","}","private var preview: some View {","  FeatureView(","    store: Store(","      initialState: Feature.State(","        destination: .edit(EditFeature.State())","      )","    ) {","      Feature()","    }","  )","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"You can use a computed property, free function, or even a dedicated view if you want. You can also"},{"text":" ","type":"text"},{"type":"text","text":"use the old, non-macro style of previews by using a "},{"type":"codeVoice","code":"PreviewProvider"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct Feature_Previews: PreviewProvider {","  static var previews: some  View {","    FeatureView(","      store: Store(","        initialState: Feature.State(","          destination: .edit(EditFeature.State())","        )","      ) {","        Feature()","      }","    )","  }","}"]},{"type":"heading","anchor":"Error-External-macro-implementation--could-not-be-found","level":4,"text":"Error: External macro implementation … could not be found"},{"inlineContent":[{"type":"text","text":"When integrating with the Composable Architecture, one may encounter the following error:"}],"type":"paragraph"},{"name":"Error","style":"note","type":"aside","content":[{"inlineContent":[{"text":"External macro implementation type ‘ComposableArchitectureMacros.ReducerMacro’ could not be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"found for macro ‘Reducer()’"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"text":"This error can show up when the macro has not yet been enabled, which is a separate error that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"should be visible from Xcode’s Issue navigator."}]},{"inlineContent":[{"type":"text","text":"Sometimes, however, this error will still emit due to an Xcode bug in which a custom build"},{"text":" ","type":"text"},{"text":"configuration name is being used in the project. In general, using a build configuration other than","type":"text"},{"type":"text","text":" "},{"text":"“Debug” or “Release” can trigger upstream build issues with Swift packages, and we recommend only","type":"text"},{"type":"text","text":" "},{"text":"using the default “Debug” and “Release” build configuration names to avoid the above issue and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"others."}],"type":"paragraph"},{"level":4,"type":"heading","text":"CI build failures","anchor":"CI-build-failures"},{"inlineContent":[{"type":"text","text":"When testing your code on an external CI server you may run into errors such as the following:"}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"CasePathsMacros Target ‘CasePathsMacros’ must be enabled before it can be used.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"ComposableArchitectureMacros Target ‘ComposableArchitectureMacros’ must be enabled before it can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"be used."}]}],"style":"note","name":"Error","type":"aside"},{"type":"paragraph","inlineContent":[{"text":"You can fix this in one of two ways. You can write a default to the CI machine that allows Xcode to","type":"text"},{"type":"text","text":" "},{"text":"skip macro validation:","type":"text"}]},{"type":"codeListing","syntax":"shell","code":["defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES"]},{"inlineContent":[{"type":"text","text":"Or if you are invoking "},{"type":"codeVoice","code":"xcodebuild"},{"type":"text","text":" directly in your CI scripts, you can pass the"},{"type":"text","text":" "},{"code":"-skipMacroValidation","type":"codeVoice"},{"text":" flag to ","type":"text"},{"type":"codeVoice","code":"xcodebuild"},{"type":"text","text":" when building your project:"}],"type":"paragraph"},{"code":["xcodebuild -skipMacroValidation …"],"type":"codeListing","syntax":"shell"}],"kind":"content"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:fileID:filePath:line:column:)-9blhe":{"url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:fileid:filepath:line:column:)-9blhe","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:fileID:filePath:line:column:)-9blhe","deprecated":true,"title":"ifLet(_:action:fileID:filePath:line:column:)","type":"topic","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"ifLet","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"text":"AnyCasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths03AnyA4PathV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"kind":"text","text":">\n"}]},"#Conforming-to-the-Reducer-protocol":{"titleInlineContent":[{"text":"Conforming to the Reducer protocol","type":"text"}],"type":"link","title":"Conforming to the Reducer protocol","identifier":"#Conforming-to-the-Reducer-protocol","url":"#Conforming-to-the-Reducer-protocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Action"}],"title":"Action","abstract":[{"text":"A type that holds all possible actions that cause the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true,"type":"reference"},{"type":"text","text":" of the reducer to change"},{"type":"text","text":" "},{"text":"and\/or kick off a side ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"type":"text","text":" that can communicate with the outside world."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/action","required":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","title":"dependency(_:)","type":"topic","abstract":[{"text":"Places a value in the reducer’s dependencies.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Reducer"},{"text":".","type":"text"}]},"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:Sq","text":"Optional","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","title":"Optional","abstract":[],"url":"\/documentation\/composablearchitecture\/swift\/optional","navigatorTitle":[{"text":"Optional","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer#Destination-and-path-reducers":{"type":"topic","title":"Destination and path reducers","kind":"section","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Destination-and-path-reducers","url":"\/documentation\/composablearchitecture\/reducer#Destination-and-path-reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseEphemeral()":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReducerCaseEphemeral"},{"text":"()","kind":"text"}],"title":"ReducerCaseEphemeral()","type":"topic","abstract":[{"type":"text","text":"Marks the case of an enum reducer as holding onto “ephemeral” state."}],"url":"\/documentation\/composablearchitecture\/reducercaseephemeral()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"kind":"article","url":"\/documentation\/composablearchitecture\/sharingstate","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","title":"Sharing state","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"role":"symbol","kind":"symbol","title":"CombineReducers","abstract":[{"text":"Combines multiple reducers into a single reducer.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"CombineReducers"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CombineReducers","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/combinereducers"},"#Autocomplete":{"titleInlineContent":[{"text":"Autocomplete","type":"text"}],"type":"link","title":"Autocomplete","identifier":"#Autocomplete","url":"#Autocomplete"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/none":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"An effect that does nothing and completes immediately. Useful for situations where you must"},{"type":"text","text":" "},{"text":"return an effect, but you don’t need to do anything.","type":"text"}],"title":"none","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/none","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"none","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/composablearchitecture\/effect\/none"},"https://github.com/apple/swift/issues/69477":{"titleInlineContent":[{"text":"issue","type":"text"}],"type":"link","title":"issue","identifier":"https:\/\/github.com\/apple\/swift\/issues\/69477","url":"https:\/\/github.com\/apple\/swift\/issues\/69477"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/case":{"url":"\/documentation\/composablearchitecture\/store\/case","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"CaseReducerState","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Action","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"State.StateReducer.Action"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"`case`","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture16CaseReducerStateP0eD0Qa","text":"StateReducer","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"CaseScope","preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP0C5ScopeQa"}],"title":"case","abstract":[{"type":"text","text":"A destructurable view of a store on a collection of cases."}],"type":"topic"},"#Preview-and-enum-reducers":{"titleInlineContent":[{"text":"#Preview and enum reducers","type":"text"}],"type":"link","title":"#Preview and enum reducers","identifier":"#Preview-and-enum-reducers","url":"#Preview-and-enum-reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"url":"\/documentation\/composablearchitecture\/store\/withstate(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","title":"withState(_:)","type":"topic","abstract":[{"text":"Calls the given closure with a snapshot of the current state of the store.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withState","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">>) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier","text":"Reducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">\n","kind":"text"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:)","title":"ifLet(_:action:)","abstract":[{"text":"A special overload of ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","type":"reference","isActive":true},{"type":"text","text":" for enum"},{"text":" ","type":"text"},{"type":"text","text":"reducers."}],"url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:)"},"http://github.com/pointfreeco/swift-case-paths":{"titleInlineContent":[{"text":"Case paths","type":"text"}],"type":"link","title":"Case paths","identifier":"http:\/\/github.com\/pointfreeco\/swift-case-paths","url":"http:\/\/github.com\/pointfreeco\/swift-case-paths"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb":{"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:destination:fileid:filepath:line:column:)-9svqb","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"StackState","preciseIdentifier":"s:22ComposableArchitecture10StackStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11StackActionO","text":"StackAction"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>, "},{"text":"destination","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">\n","kind":"text"}],"title":"forEach(_:action:destination:fileID:filePath:line:column:)","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on elements of a navigation stack in"},{"text":" ","type":"text"},{"text":"parent state.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","title":"Reducer()","type":"topic","url":"\/documentation\/composablearchitecture\/reducer()","abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"type":"text","text":" protocol for a type."}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol"},"#Navigating-to-non-reducer-features":{"titleInlineContent":[{"text":"Navigating to non-reducer features","type":"text"}],"type":"link","title":"Navigating to non-reducer features","identifier":"#Navigating-to-non-reducer-features","url":"#Navigating-to-non-reducer-features"},"#Destination-and-path-reducers":{"titleInlineContent":[{"text":"Destination and path reducers","type":"text"}],"type":"link","title":"Destination and path reducers","identifier":"#Destination-and-path-reducers","url":"#Destination-and-path-reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseIgnored()":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducercaseignored()","title":"ReducerCaseIgnored()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ReducerCaseIgnored","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[{"text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"into the rest of the reducer besides state."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()"},"#Gotchas":{"titleInlineContent":[{"text":"Gotchas","type":"text"}],"type":"link","title":"Gotchas","identifier":"#Gotchas","url":"#Gotchas"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q":{"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on an optional property of parent state."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"ifLet","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Destination"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":", "},{"text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"destination"},{"text":": () -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"text":">\n","kind":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:destination:fileid:filepath:line:column:)-4ub6q","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","title":"ifLet(_:action:destination:fileID:filePath:line:column:)","kind":"symbol","role":"symbol"},"https://swiftpackageindex.com/pointfreeco/swift-case-paths/main/documentation/casepaths/casepathable()":{"titleInlineContent":[{"type":"codeVoice","code":"@CasePathable"}],"type":"link","title":"@CasePathable","identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-case-paths\/main\/documentation\/casepaths\/casepathable()","url":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-case-paths\/main\/documentation\/casepaths\/casepathable()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/_printChanges(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"_printChanges"},{"kind":"text","text":"("},{"text":"_ReducerPrinter","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"text":">?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"_PrintChangesReducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/_printChanges(_:)","abstract":[{"type":"text","text":"Enhances a reducer with debug logging of received actions and state mutations for the given"},{"type":"text","text":" "},{"text":"printer.","type":"text"}],"title":"_printChanges(_:)","url":"\/documentation\/composablearchitecture\/reducer\/_printchanges(_:)","type":"topic","role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/onChange(of:_:)":{"url":"\/documentation\/composablearchitecture\/reducer\/onchange(of:_:)","role":"symbol","title":"onChange(of:_:)","kind":"symbol","abstract":[{"type":"text","text":"Adds a reducer to run when this reducer changes the given value in state."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":") -> "},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_OnChangeReducer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/onChange(of:_:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reduce":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reduce","abstract":[{"type":"text","text":"A type-erased reducer that invokes the given "},{"type":"codeVoice","code":"reduce"},{"text":" function.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reduce"}],"role":"symbol","navigatorTitle":[{"text":"Reduce","kind":"identifier"}],"title":"Reduce"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducer":{"abstract":[{"type":"text","text":"A reducer represented by multiple enum cases."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseReducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/casereducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","title":"CaseReducer","navigatorTitle":[{"text":"CaseReducer","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:_:)","abstract":[{"type":"text","text":"Sets the dependency value of the specified key path to the given value."}],"title":"dependency(_:_:)","url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:_:)","type":"topic","role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations","kind":"article","abstract":[{"type":"text","text":"Review unsupported reducer APIs and their replacements."}],"title":"Deprecations","role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/reducerdeprecations"},"#CI-build-failures":{"titleInlineContent":[{"text":"CI build failures","type":"text"}],"type":"link","title":"CI build failures","identifier":"#CI-build-failures","url":"#CI-build-failures"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:element:fileID:filePath:line:column:)-6zye8":{"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:element:fileid:filepath:line:column:)-6zye8","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-6zye8","title":"forEach(_:action:element:fileID:filePath:line:column:)","type":"topic","abstract":[{"text":"Embeds a child reducer in a parent domain that works on elements of a collection in parent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"state."}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"forEach","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ElementState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ElementAction"},{"text":", ","kind":"text"},{"text":"ID","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"IdentifiedArray","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"text":", ","kind":"text"},{"text":"ElementState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO","text":"IdentifiedAction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementAction"},{"text":">>, ","kind":"text"},{"text":"element","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","text":"Action"},{"text":">\n","kind":"text"}]},"#Automatic-fulfillment-of-reducer-requirements":{"titleInlineContent":[{"text":"Automatic fulfillment of reducer requirements","type":"text"}],"type":"link","title":"Automatic fulfillment of reducer requirements","identifier":"#Automatic-fulfillment-of-reducer-requirements","url":"#Automatic-fulfillment-of-reducer-requirements"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigation","title":"Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerBuilder"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","url":"\/documentation\/composablearchitecture\/reducerbuilder","abstract":[{"text":"A result builder for combining reducers into a single reducer by running each, one after the","type":"text"},{"type":"text","text":" "},{"text":"other, and merging their effects.","type":"text"}],"role":"symbol","title":"ReducerBuilder"},"#CasePathable-and-dynamicMemberLookup-enums":{"titleInlineContent":[{"text":"@CasePathable and @dynamicMemberLookup enums","type":"text"}],"type":"link","title":"@CasePathable and @dynamicMemberLookup enums","identifier":"#CasePathable-and-dynamicMemberLookup-enums","url":"#CasePathable-and-dynamicMemberLookup-enums"},"#Synthesizing-protocol-conformances-on-State-and-Action":{"titleInlineContent":[{"text":"Synthesizing protocol conformances on State and Action","type":"text"}],"type":"link","title":"Synthesizing protocol conformances on State and Action","identifier":"#Synthesizing-protocol-conformances-on-State-and-Action","url":"#Synthesizing-protocol-conformances-on-State-and-Action"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:)":{"abstract":[{"type":"text","text":"A special overload of "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","type":"reference"},{"text":" for enum","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reducers."}],"title":"forEach(_:action:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"forEach","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"StackState","preciseIdentifier":"s:22ComposableArchitecture10StackStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11StackActionO","text":"StackAction"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":">\n"}],"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"title":"Shared","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Shared"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","url":"\/documentation\/composablearchitecture\/shared","abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:element:fileID:filePath:line:column:)-o1gn":{"role":"symbol","kind":"symbol","title":"forEach(_:action:element:fileID:filePath:line:column:)","abstract":[],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-o1gn","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ElementState"},{"text":", ","kind":"text"},{"text":"ElementAction","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ID"},{"text":", ","kind":"text"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"IdentifiedArray","kind":"typeIdentifier","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ElementState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths03AnyA4PathV","kind":"typeIdentifier","text":"AnyCasePath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"ID"},{"text":", ","kind":"text"},{"text":"ElementAction","kind":"typeIdentifier"},{"text":")>, ","kind":"text"},{"text":"element","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">\n","kind":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:element:fileid:filepath:line:column:)-o1gn"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","required":true,"defaultImplementations":2,"kind":"symbol","abstract":[{"type":"text","text":"The content and behavior of a reducer that is composed from other reducers."}],"title":"body","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"body"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa","kind":"typeIdentifier","text":"Body"}]},"https://developer.apple.com/documentation/os/logging/recording_performance_data":{"titleInlineContent":[{"text":"signposts","type":"text"}],"type":"link","title":"signposts","identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","url":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"role":"article","url":"\/documentation\/composablearchitecture\/treebasednavigation","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"type":"text","text":" "},{"type":"text","text":"how to model your domains, how to integrate features, how to test your features, and more."}],"type":"topic","title":"Tree-based navigation","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation"},"#Using-the-Reducer-macro":{"titleInlineContent":[{"text":"Using the @Reducer macro","type":"text"}],"type":"link","title":"Using the @Reducer macro","identifier":"#Using-the-Reducer-macro","url":"#Using-the-Reducer-macro"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic","role":"symbol","title":"Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on a case of parent enum state."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"ifCaseLet","kind":"identifier"},{"kind":"text","text":"<"},{"text":"CaseState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Case","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"CaseState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"text":"_IfCaseLetReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"ifCaseLet(_:action:then:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/reducer\/ifcaselet(_:action:then:fileid:filepath:line:column:)-7sg8d"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn":{"kind":"symbol","abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:then:fileid:filepath:line:column:)-2r2pn","title":"ifLet(_:action:then:fileID:filePath:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"kind":"text","text":"<"},{"text":"WrappedState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"WrappedAction"},{"kind":"text","text":", "},{"text":"Wrapped","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"WrappedState"},{"kind":"text","text":"?>, "},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"WrappedAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">\n","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","title":"EmptyReducer","type":"topic","url":"\/documentation\/composablearchitecture\/emptyreducer","abstract":[{"text":"A reducer that does nothing.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"EmptyReducer","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"EmptyReducer","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"url":"\/documentation\/composablearchitecture\/bindingreducer","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","type":"topic","abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingReducer","kind":"identifier"}],"title":"BindingReducer","kind":"symbol","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"title":"Dependencies","url":"\/documentation\/composablearchitecture\/dependencymanagement","kind":"article","type":"topic","role":"article","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"text":"any reducer.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"title":"State","abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","required":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"title":"Effect","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"title":"Scope","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/composablearchitecture\/scope"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/signpost(_:log:)":{"url":"\/documentation\/composablearchitecture\/reducer\/signpost(_:log:)","role":"symbol","title":"signpost(_:log:)","kind":"symbol","abstract":[{"text":"Instruments a reducer with","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"signpost"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"log","kind":"externalParam"},{"kind":"text","text":": "},{"text":"OSLog","preciseIdentifier":"c:objc(cs)OS_os_log","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_SignpostReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/signpost(_:log:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerOf":{"url":"\/documentation\/composablearchitecture\/reducerof","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerOf","title":"ReducerOf","type":"topic","navigatorTitle":[{"text":"ReducerOf","kind":"identifier"}],"abstract":[{"text":"A convenience for constraining a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference","isActive":true},{"type":"text","text":" conformance."}],"kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerOf","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"role":"symbol","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","type":"topic","title":"ObservableState()","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/composablearchitecture\/observablestate()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_SynthesizedConformance":{"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_SynthesizedConformance","title":"_SynthesizedConformance","type":"topic","url":"\/documentation\/composablearchitecture\/_synthesizedconformance","abstract":[{"text":"A description of a protocol conformance to synthesize on the State and Action types generated by","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true,"type":"reference"},{"text":" macro.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"_SynthesizedConformance","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"_SynthesizedConformance"}],"kind":"symbol","role":"symbol"},"#Nested-enum-reducers":{"titleInlineContent":[{"text":"Nested enum reducers","type":"text"}],"type":"link","title":"Nested enum reducers","identifier":"#Nested-enum-reducers","url":"#Nested-enum-reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"url":"\/documentation\/composablearchitecture\/stackbasednavigation","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"type":"text","text":" "},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","kind":"article","title":"Stack-based navigation","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI/NavigationStack/init(path:root:destination:fileID:filePath:line:column:)":{"abstract":[{"text":"Drives a navigation stack with a store.","type":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Root"},{"text":" conforms to ","type":"text"},{"code":"View","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/swiftui\/navigationstack\/init(path:root:destination:fileid:filepath:line:column:)","title":"init(path:root:destination:fileID:filePath:line:column:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":", "},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:22ComposableArchitecture11StackActionO","kind":"typeIdentifier","text":"StackAction"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">>>, "},{"text":"root","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"destination"},{"text":": (","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Destination"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"navigatorTitle":[{"text":"PersistenceKey","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","url":"\/documentation\/composablearchitecture\/persistencekey","abstract":[{"text":"A type that can persist shared state to an external storage.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PersistenceKey","kind":"identifier"}],"role":"symbol","title":"PersistenceKey","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/transformDependency(_:transform:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformDependency"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"transform"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/transformDependency(_:transform:)","abstract":[{"text":"Transform a reducer’s dependency value at the specified key path with the given function.","type":"text"}],"title":"transformDependency(_:transform:)","url":"\/documentation\/composablearchitecture\/reducer\/transformdependency(_:transform:)","type":"topic","role":"symbol","kind":"symbol"}}}