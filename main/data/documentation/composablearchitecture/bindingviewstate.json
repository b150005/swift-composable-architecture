{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState"},"seeAlsoSections":[{"title":"Bindings","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"],"anchor":"Bindings"}],"metadata":{"role":"symbol","symbolKind":"struct","title":"BindingViewState","navigatorTitle":[{"kind":"identifier","text":"BindingViewState"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingViewState","kind":"identifier"}],"externalID":"s:22ComposableArchitecture16BindingViewStateV","modules":[{"name":"ComposableArchitecture"}]},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"anchor":"Subscripts","title":"Subscripts","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)"],"generated":true},{"title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations"],"anchor":"Default-Implementations","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB13RepresentableP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/s17CustomReflectableP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH"],"type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@dynamicMemberLookup"},{"text":" ","kind":"text"},{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingViewState"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"Read "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","type":"reference","isActive":true},{"text":" for more information.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingviewstate"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"abstract":[{"text":"A property wrapper type that can designate properties of view state that can be directly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}],"kind":"symbol","references":{"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of app state that can be directly bindable"},{"text":" ","type":"text"},{"text":"in SwiftUI views.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingState"}],"deprecated":true,"kind":"symbol","title":"BindingState","navigatorTitle":[{"text":"BindingState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Equatable-Implementations":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/equatable-implementations","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/SH":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://ComposableArchitecture/10CustomDump0aB13RepresentableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB13RepresentableP","title":"CustomDump.CustomDumpRepresentable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"type":"topic","title":"ViewStore","deprecated":true,"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","type":"topic","kind":"article","title":"Working with SwiftUI bindings","url":"\/documentation\/composablearchitecture\/bindings","role":"article","abstract":[{"type":"text","text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings."}]},"doc://ComposableArchitecture/s17CustomReflectableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s17CustomReflectableP","title":"Swift.CustomReflectable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"type":"topic","abstract":[{"text":"A property wrapper type that can designate properties of view state that can be directly","type":"text"},{"type":"text","text":" "},{"text":"bindable in SwiftUI views.","type":"text"}],"navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"title":"BindingViewState","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstate","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingViewState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/wrappedValue":{"abstract":[],"url":"\/documentation\/composablearchitecture\/bindingviewstate\/wrappedvalue","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue","kind":"symbol","title":"wrappedValue","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/projectedValue":{"abstract":[],"title":"projectedValue","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier","text":"Binding"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstate\/projectedvalue","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdebugstringconvertible-implementations","type":"topic","title":"CustomDebugStringConvertible Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomReflectable-Implementations":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","type":"topic","title":"CustomReflectable Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customreflectable-implementations","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Hashable-Implementations":{"url":"\/documentation\/composablearchitecture\/bindingviewstate\/hashable-implementations","title":"Hashable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations","type":"topic","role":"collectionGroup","abstract":[],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDumpRepresentable-Implementations":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","type":"topic","title":"CustomDumpRepresentable Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdumprepresentable-implementations","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/subscript(dynamicMember:)":{"title":"subscript(dynamicMember:)","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)","role":"symbol","fragments":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"BindingViewState","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">"}],"url":"\/documentation\/composablearchitecture\/bindingviewstate\/subscript(dynamicmember:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"title":"BindingViewStore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BindingViewStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","url":"\/documentation\/composablearchitecture\/bindingviewstore","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingViewStore","kind":"identifier"}],"abstract":[{"text":"A property wrapper type that can derive ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true},{"type":"text","text":" values for a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"reference"},{"type":"text","text":"."}]}}}