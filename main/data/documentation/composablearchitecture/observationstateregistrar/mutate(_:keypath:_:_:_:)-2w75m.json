{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"mutate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Member","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"subject","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Member"},{"text":">, ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"newValue"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"isIdentityEqual"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Observation10ObservableP","text":"Observable","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of an observable type."}]}],"name":"subject"},{"content":[{"inlineContent":[{"text":"The key path of an observed property.","type":"text"}],"type":"paragraph"}],"name":"keyPath"},{"name":"value","content":[{"inlineContent":[{"type":"text","text":"The value being mutated."}],"type":"paragraph"}]},{"name":"newValue","content":[{"type":"paragraph","inlineContent":[{"text":"The new value to mutate with.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"A comparison function that determines whether two values have the","type":"text"},{"text":" ","type":"text"},{"text":"same identity or not.","type":"text"}],"type":"paragraph"}],"name":"isIdentityEqual"}],"kind":"parameters"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/mutate(_:keyPath:_:_:_:)-2w75m"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/observationstateregistrar\/mutate(_:keypath:_:_:_:)-2w75m"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Mutates a value to a new value, and decided to notify observers based on the identity of"},{"text":" ","type":"text"},{"text":"the value.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mutate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"text":"keyPath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"text":"Member","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"title":"mutate(_:keyPath:_:_:_:)","symbolKind":"method","extendedModule":"ComposableArchitecture","platforms":[{"unavailable":false,"name":"iOS","beta":false,"deprecated":false,"introducedAt":"17.0"},{"beta":false,"introducedAt":"14.0","unavailable":false,"name":"macOS","deprecated":false},{"deprecated":false,"introducedAt":"17.0","beta":false,"name":"tvOS","unavailable":false},{"introducedAt":"10.0","name":"watchOS","beta":false,"deprecated":false,"unavailable":false}],"roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture25ObservationStateRegistrarV6mutate_7keyPath___yx_s03KeyH0Cyxq_Gq0_zq0_Sbq0__q0_tXEt0C010ObservableRzr1_lF","role":"symbol"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"role":"symbol","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","type":"topic","title":"ObservableState()","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/composablearchitecture\/observablestate()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ObservationStateRegistrar","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar","url":"\/documentation\/composablearchitecture\/observationstateregistrar","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"ObservationStateRegistrar","kind":"identifier"}],"abstract":[{"text":"Provides storage for tracking and access to data changes.","type":"text"}],"title":"ObservationStateRegistrar"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar/mutate(_:keyPath:_:_:_:)-2w75m":{"title":"mutate(_:keyPath:_:_:_:)","abstract":[{"text":"Mutates a value to a new value, and decided to notify observers based on the identity of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the value."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mutate","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Subject","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"text":"keyPath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Member"},{"text":">, ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":", (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"url":"\/documentation\/composablearchitecture\/observationstateregistrar\/mutate(_:keypath:_:_:_:)-2w75m","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/mutate(_:keyPath:_:_:_:)-2w75m","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"title":"Effect","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"title":"State","abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","required":true,"type":"topic"}}}