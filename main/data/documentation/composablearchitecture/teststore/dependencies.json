{"metadata":{"title":"dependencies","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"dependencies","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"}],"roleHeading":"Instance Property","role":"symbol","symbolKind":"property","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture9TestStoreC12dependencies12Dependencies16DependencyValuesVvp"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/dependencies"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"topicSections":[{"anchor":"Configuring-exhaustivity","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-61in2"],"title":"Configuring exhaustivity"}],"kind":"symbol","seeAlsoSections":[{"anchor":"Configuring-a-test-store","generated":true,"title":"Configuring a test store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/useMainSerialExecutor"]}],"abstract":[{"type":"text","text":"The current dependencies of the test store."}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"dependencies","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"The dependencies define the execution context that your feature runs in. They can be modified"},{"text":" ","type":"text"},{"type":"text","text":"throughout the test store’s lifecycle in order to influence how your feature produces effects."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Typically you will override certain dependencies immediately after constructing the test","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"store. For example, if your feature need access to the current date and an API client to do"},{"type":"text","text":" "},{"type":"text","text":"its job, you can override those dependencies like so:"}]},{"type":"codeListing","syntax":"swift","code":["let store = TestStore(\/* ... *\/) {","  $0.apiClient = .mock","  $0.date = .constant(Date(timeIntervalSinceReferenceDate: 1234567890))","}","","\/\/ Store assertions here"]},{"inlineContent":[{"type":"text","text":"You can also override dependencies in the middle of the test in order to simulate how the"},{"text":" ","type":"text"},{"text":"dependency changes as the user performs action. For example, to test the flow of an API","type":"text"},{"text":" ","type":"text"},{"text":"request failing at first but then later succeeding, you can do the following:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["store.dependencies.apiClient = .failing","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(\\.searchResponse.failure) { \/* ... *\/ }","","store.dependencies.apiClient = .mock","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(\\.searchResponse.success) { \/* ... *\/ }"]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/timeout":{"abstract":[{"text":"The default timeout used in all methods that take an optional timeout.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","url":"\/documentation\/composablearchitecture\/teststore\/timeout","type":"topic","title":"timeout","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timeout"},{"text":": ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/withDependencies(_:operation:)-61in2":{"kind":"symbol","title":"withDependencies(_:operation:)","url":"\/documentation\/composablearchitecture\/teststore\/withdependencies(_:operation:)-61in2","type":"topic","abstract":[{"text":"Overrides the store’s dependencies for a given operation.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-61in2","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withDependencies","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/useMainSerialExecutor":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/useMainSerialExecutor","type":"topic","title":"useMainSerialExecutor","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"useMainSerialExecutor","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","abstract":[{"text":"Serializes all async work to the main thread for the lifetime of the test store.","type":"text"}],"url":"\/documentation\/composablearchitecture\/teststore\/usemainserialexecutor"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/dependencies":{"abstract":[{"type":"text","text":"The current dependencies of the test store."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies","url":"\/documentation\/composablearchitecture\/teststore\/dependencies","type":"topic","title":"dependencies","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependencies"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","abstract":[{"type":"text","text":"The current exhaustivity level of the test store."}],"role":"symbol","title":"exhaustivity","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exhaustivity","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"title":"TestStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/teststore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TestStore","kind":"identifier"}],"type":"topic"}}}