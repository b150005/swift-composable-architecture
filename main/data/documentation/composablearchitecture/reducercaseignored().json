{"seeAlsoSections":[{"anchor":"Enum-reducers","title":"Enum reducers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState"],"generated":true}],"kind":"symbol","metadata":{"symbolKind":"macro","roleHeading":"Macro","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReducerCaseIgnored"},{"text":"()","kind":"text"}],"role":"symbol","externalID":"s:22ComposableArchitecture18ReducerCaseIgnoredyycfm","title":"ReducerCaseIgnored()"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain"},{"text":" ","type":"text"},{"type":"text","text":"into the rest of the reducer besides state."}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(peer, names: named(`_`)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerCaseIgnored","kind":"identifier"},{"kind":"text","text":"()"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"Apply this macro to cases that do not hold onto reducer features, and instead hold onto plain","type":"text"},{"text":" ","type":"text"},{"text":"data that needs to be passed to a child view.","type":"text"}],"type":"paragraph"},{"code":["@Reducer","enum Destination {","  @ReducerCaseIgnored","  case meeting(id: Meeting.ID)","  \/\/ ...","}"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/reducercaseignored()"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer(state:action:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"("},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"_SynthesizedConformance","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV"},{"text":"..., ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"_SynthesizedConformance","preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV"},{"text":"...)","kind":"text"}],"title":"Reducer(state:action:)","type":"topic","abstract":[{"type":"text","text":"An overload of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"type":"text","text":" that takes a description of protocol conformances to synthesize on"},{"text":" ","type":"text"},{"text":"the State and Action types","type":"text"}],"deprecated":true,"url":"\/documentation\/composablearchitecture\/reducer(state:action:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseIgnored()":{"type":"topic","url":"\/documentation\/composablearchitecture\/reducercaseignored()","title":"ReducerCaseIgnored()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ReducerCaseIgnored","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[{"text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"into the rest of the reducer besides state."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducer":{"abstract":[{"type":"text","text":"A reducer represented by multiple enum cases."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseReducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/casereducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","title":"CaseReducer","navigatorTitle":[{"text":"CaseReducer","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","type":"topic","navigatorTitle":[{"text":"Reducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducerState":{"url":"\/documentation\/composablearchitecture\/casereducerstate","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState","type":"topic","abstract":[{"text":"A state type that is associated with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer"},{"type":"text","text":"."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseReducerState","kind":"identifier"}],"title":"CaseReducerState","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CaseReducerState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"title":"Effect","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","title":"Reducer()","type":"topic","url":"\/documentation\/composablearchitecture\/reducer()","abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"type":"text","text":" protocol for a type."}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseEphemeral()":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReducerCaseEphemeral"},{"text":"()","kind":"text"}],"title":"ReducerCaseEphemeral()","type":"topic","abstract":[{"type":"text","text":"Marks the case of an enum reducer as holding onto “ephemeral” state."}],"url":"\/documentation\/composablearchitecture\/reducercaseephemeral()"}}}