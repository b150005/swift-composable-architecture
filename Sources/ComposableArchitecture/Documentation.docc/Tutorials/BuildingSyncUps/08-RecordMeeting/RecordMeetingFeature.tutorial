@Tutorial(time: 5) {
  @Intro(title: "RecordMeeting 機能") {
    新機能の土台を作成し、画面遷移できるようにしてからタイマーや音声認識などの複雑なロジックと振る舞いを追加していきます。
  }

  @Section(title: "新機能の作成") {
    @ContentAndMedia {
      ミーティング録音機能のロジック・振る舞い・ビューをもつ新機能を作成します。
      一旦ロジックは飛ばして、ドメインモデリングとビューの土台を作成します。
    }

    @Steps {
      @Step {
        `RecordMeeting.swift` というファイルを作成し、機能のロジックと振る舞いを [`@Reducer`](<doc:ComposableArchitecture/Reducer()>) マクロを適用した構造体に追加します。

        @Code(name: "RecordMeeting.swift", file: RecordMeetingFeature-01-code-0001.swift)
      }

      @Step {
        `RecordMeeting` 内の `State` 構造体に現在の話者・経過時間・議事録・ Sync-up を表すプロパティを追加します。

        また、 `Action` 列挙型にユーザがビュー上で行う操作ケースを追加します。
        現段階では、会議を早期終了する "End meeting" ボタンと話者をスキップする "Next" ボタンの2つがあります。

        > Note: Sync-up に [`@Shared`](<doc:ComposableArchitecture/Shared>) プロパティラッパーを適用することで、他の機能と Sync-up を共有しながら操作することができます。

        @Code(name: "RecordMeeting.swift", file: RecordMeetingFeature-01-code-0002.swift)
      }

      @Step {
        `RecordMeetingView` とそのサブビューをペーストします。

        > Note: このチュートリアルでは SwiftUI ビューの構築ではなくプレゼンテーションロジックと振る舞いの実装方法について焦点を当てます。

        @Code(name: "RecordMeeting.swift", file: RecordMeetingFeature-01-code-0003.swift)
      }

      @Step {
        プレビューを実行してデザインを確認します。

        @Image(source: "RecordMeetingFeature-01-image-0004.jpg")
      }
    }
  }

  @Section(title: "ミーティング録音画面への遷移") {
    @ContentAndMedia {
      ミーティング録音機能の土台が完成したため、詳細画面からこのミーティング録音画面に遷移できるようにしましょう。
    }

    @Steps {
      @Step {
        `AppFeature.swift` ファイルに移動し、 `Path` Reducer にケースを追加することで `NavigationStack` で `RecordMeeting` 機能に画面遷移できるようにします。

        @Code(name: "AppFeature.swift", file: RecordMeetingFeature-02-code-0001.swift, previousFile: RecordMeetingFeature-02-code-0001-previous.swift)
      }

      `Path` 列挙型にケースを追加すると、 switch 文で `Path` 列挙型を使用しているビューでコンパイラエラーが発生します。

      @Step {
        `.record` ケースを分解して `RecordMeeting` ドメインにスコープを限定した ``ComposableArchitecture/Store`` にアクセスし、 `RecordMeetingView` を構築することでコンパイラエラーを修正します。

        @Code(name: "AppFeature.swift", file: RecordMeetingFeature-02-code-0002.swift, previousFile: RecordMeetingFeature-02-code-0002-previous.swift)
      }

      アプリは再びビルド可能になりましたが、ミーティング録音機能への画面遷移ロジックはまだ実装していません。

      @Step {
        `SyncUpDetailView` の `NavigationLink` を修正し、 "Start Meeting" ラベルのタップ時に `NavigationStack` に `Path` で指定する画面をプッシュするようにします。

        @Code(name: "SyncUpDetail.swift", file: RecordMeetingFeature-02-code-0003.swift, previousFile: RecordMeetingFeature-02-code-0003-previous.swift)
      }

      @Step {
        シミュレータでアプリを実行し "Start Meeting" ボタンをタップするとミーティング録音画面に遷移します。

        @Video(source: RecordMeetingFeature-02-video-0004.mov)
      }

      ミーティング録音機能の土台の作成と画面遷移を実装しました。
      次は、タイマーをはじめとするこの機能の複雑なロジックと振る舞いを実装していきます。
    }
  }
}
